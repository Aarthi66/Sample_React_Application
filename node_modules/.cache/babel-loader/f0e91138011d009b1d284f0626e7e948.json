{"ast":null,"code":"var _jsxFileName = \"/Users/at1/react-app/calculator-app/Sample_React_Application/src/components/Form/Form.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport uuidv1 from \"uuid\";\nimport { addNotes, delItem } from \"../../js/actions/index\";\nimport \"./Form.css\";\n\nfunction mapDispatchToProps(dispatch) {\n  //dispatch the actions\n  return {\n    addNotes: notes => dispatch(addNotes(notes)),\n    delItem: index => dispatch(delItem(index))\n  };\n}\n\nclass ConnectedForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this); // this.handleKeyPress=this.handleKeyPress.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const title = this.state.title; //Destructuring to make the variable more readable from object\n\n    if (title !== \"\" && title.trim() !== \"\") {\n      const id = uuidv1(); //creating ID for each entries using Universal Unique Identifier\n\n      this.props.addNotes({\n        title,\n        id\n      }); //addNotes function in actions is called\n\n      this.setState({\n        title: \"\"\n      }); //Making the content in text box as empty once it get added\n    }\n  }\n\n  render() {\n    const title = this.state.title;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"textInput\",\n      id: \"title\",\n      value: title,\n      onChange: this.handleChange // onKeyPress={this.handleKeyPress}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"btn\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"+\"));\n  }\n\n} //connect react component with redux by CONNECT\n\n\nconst Form = connect(null, mapDispatchToProps)(ConnectedForm);\nexport default Form;","map":{"version":3,"sources":["/Users/at1/react-app/calculator-app/Sample_React_Application/src/components/Form/Form.jsx"],"names":["React","Component","connect","uuidv1","addNotes","delItem","mapDispatchToProps","dispatch","notes","index","ConnectedForm","constructor","state","title","handleChange","bind","handleSubmit","event","setState","target","id","value","preventDefault","trim","props","render","Form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,MAAnB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,wBAAlC;AACA,OAAO,YAAP;;AAEA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC;AACA,SAAO;AACLH,IAAAA,QAAQ,EAAEI,KAAK,IAAID,QAAQ,CAACH,QAAQ,CAACI,KAAD,CAAT,CADtB;AAELH,IAAAA,OAAO,EAAEI,KAAK,IAAIF,QAAQ,CAACF,OAAO,CAACI,KAAD,CAAR;AAFrB,GAAP;AAID;;AACD,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AACpCU,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB,CANY,CAOZ;AACD;;AACDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAAE,OAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,GAAmBH,KAAK,CAACE,MAAN,CAAaE;AAAlC,KAAd;AACD;;AACDL,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACK,cAAN;AADkB,UAEVT,KAFU,GAEA,KAAKD,KAFL,CAEVC,KAFU,EAEY;;AAE9B,QAAIA,KAAK,KAAK,EAAV,IAAgBA,KAAK,CAACU,IAAN,OAAiB,EAArC,EAAyC;AACvC,YAAMH,EAAE,GAAGjB,MAAM,EAAjB,CADuC,CAClB;;AACrB,WAAKqB,KAAL,CAAWpB,QAAX,CAAoB;AAAES,QAAAA,KAAF;AAASO,QAAAA;AAAT,OAApB,EAFuC,CAEH;;AACpC,WAAKF,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAE;AAAT,OAAd,EAHuC,CAGT;AAC/B;AACF;;AAEDY,EAAAA,MAAM,GAAG;AAAA,UACCZ,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,WAFZ;AAGE,MAAA,EAAE,EAAC,OAHL;AAIE,MAAA,KAAK,EAAEA,KAJT;AAKE,MAAA,QAAQ,EAAE,KAAKC,YALjB,CAME;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,OAAO,EAAE,KAAKE,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATF,CADF;AAeD;;AA1CmC,C,CA4CtC;;;AACA,MAAMU,IAAI,GAAGxB,OAAO,CAClB,IADkB,EAElBI,kBAFkB,CAAP,CAGXI,aAHW,CAAb;AAIA,eAAegB,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport uuidv1 from \"uuid\";\nimport { addNotes, delItem } from \"../../js/actions/index\";\nimport \"./Form.css\";\n\nfunction mapDispatchToProps(dispatch) {\n  //dispatch the actions\n  return {\n    addNotes: notes => dispatch(addNotes(notes)),\n    delItem: index => dispatch(delItem(index))\n  };\n}\nclass ConnectedForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    // this.handleKeyPress=this.handleKeyPress.bind(this);\n  }\n  handleChange(event) {\n    this.setState({ [event.target.id]: event.target.value });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const { title } = this.state; //Destructuring to make the variable more readable from object\n\n    if (title !== \"\" && title.trim() !== \"\") {\n      const id = uuidv1(); //creating ID for each entries using Universal Unique Identifier\n      this.props.addNotes({ title, id }); //addNotes function in actions is called\n      this.setState({ title: \"\" }); //Making the content in text box as empty once it get added\n    }\n  }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <div>\n        <input\n          type=\"text\"\n          className=\"textInput\"\n          id=\"title\"\n          value={title}\n          onChange={this.handleChange}\n          // onKeyPress={this.handleKeyPress}\n        />\n        <div className=\"btn\" onClick={this.handleSubmit}>\n          +\n        </div>\n      </div>\n    );\n  }\n}\n//connect react component with redux by CONNECT\nconst Form = connect(\n  null,\n  mapDispatchToProps\n)(ConnectedForm);\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}